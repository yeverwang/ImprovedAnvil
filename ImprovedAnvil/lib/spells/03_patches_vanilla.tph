/// Patch existing vanilla spells ///

// common innates (spells) //

COPY_EXISTING ~spin535.spl~ ~override/spin535.spl~
  WRITE_BYTE  0x27      0 // secondary type

COPY_EXISTING ~SPIN658.spl~ ~override/SPIN658.spl~
  WRITE_SHORT 0x25      0 // type
  WRITE_BYTE  0x27    0xc // secondary type

COPY_EXISTING ~spin674.spl~ ~override/spin674.spl~
  WRITE_BYTE  0x25      4 // primary type

COPY_EXISTING ~SPIN695.spl~ ~override/SPIN695.spl~
  WRITE_SHORT 0x25      0 // type
  WRITE_BYTE  0x27    0xc // secondary type

COPY_EXISTING ~SPWI406.spl~ ~override/SPIN736.spl~
  LAUNCH_PATCH_FUNCTION ~ALTER_SPELL_EFFECT~ INT_VAR
    check_headers = 1
    header_type = 1
    target = 2
  END

  LAUNCH_PATCH_FUNCTION ~ALTER_SPELL_HEADER~ INT_VAR
    header = 1
    target = 1
  END

COPY_EXISTING ~SPIN768.spl~ ~override/SPIN768.spl~
  WRITE_SHORT 0x25      0 // type
  WRITE_BYTE  0x27      0 // secondary type

COPY_EXISTING ~SPIN769.spl~ ~override/SPIN769.spl~
  WRITE_SHORT 0x25      0 // type
  WRITE_BYTE  0x27      0 // secondary type

COPY_EXISTING ~spin775.spl~ ~override/spin775.spl~
  SAY NAME1 @358
  WRITE_BYTE  0x27    0xb // secondary type

COPY_EXISTING ~spin839.spl~ ~override/spin839.spl~
  WRITE_BYTE  0x25      4 // primary type

COPY_EXISTING ~SPIN890.spl~ ~override/SPIN890.spl~
  WRITE_BYTE  0x27    0xb // secondary type

COPY_EXISTING ~SPIN893.spl~ ~override/SPIN893.spl~
  WRITE_BYTE  0x27    0xa // secondary type

COPY_EXISTING ~spin894.spl~ ~override/spin894.spl~
  WRITE_BYTE  0x27      0 // secondary type

COPY_EXISTING ~spin909.spl~ ~override/spin909.spl~
  WRITE_BYTE  0x27      0 // secondary type

COPY_EXISTING ~spin910.spl~ ~override/spin910.spl~
  WRITE_BYTE  0x25      4 // primary type
  WRITE_BYTE  0x27      0 // secondary type

COPY_EXISTING ~spin911.spl~ ~override/spin911.spl~
  WRITE_BYTE  0x27      0 // secondary type

COPY_EXISTING ~spin975.spl~ ~override/spin975.spl~
  WRITE_BYTE  0x25      4 // primary type

COPY_EXISTING ~spin976.spl~ ~override/spin976.spl~
  WRITE_BYTE  0x25      4 // primary type
  WRITE_BYTE  0x27     11 // secondary type

COPY_EXISTING ~SPIN999.spl~ ~override/SPIN999.spl~
  WRITE_BYTE  0x25      4 // primary type
  WRITE_BYTE  0x27    0xb // secondary type

// class level abilities //

COPY_EXISTING ~SPCL904.spl~ ~override/SPCL904.spl~
  WRITE_BYTE  0x27      2 // secondary type

// priest spells //

// patch clerical spells not to activate SCRIPTINGSTATE6 on a character
COPY_EXISTING ~BHAAL2A.spl~ ~override/BHAAL2A.spl~
              ~SPIN103.spl~ ~override/SPIN103.spl~
              ~SPPR202.spl~ ~override/SPPR202.spl~
              ~SPPR214.spl~ ~override/SPPR214.spl~
              ~SPPR412.spl~ ~override/SPPR412.spl~
              ~SPPR513.spl~ ~override/SPPR513.spl~
              ~DGRIGHT.spl~ ~override/DGRIGHT.spl~
  LPF ~DELETE_SPELL_EFFECT~ INT_VAR
    opcode_to_delete = 282
  END

// patch "wake on sleep" for Command and Greater Command
COPY_EXISTING ~SPPR102.spl~ ~override/SPPR102.spl~
              ~SPPR512.spl~ ~override/SPPR512.spl~
  LPF ~ALTER_SPELL_EFFECT~ INT_VAR
    check_headers = 1
    match_opcode = 39
    parameter2 = 1
  END

// Spirit Ward
COPY_EXISTING ~SPPR150.spl~ ~override/SPPR150.spl~
  SAY UNIDENTIFIED_DESC @10267

  // remove attack roll penalty (219)
  LPF DELETE_SPELL_EFFECT INT_VAR opcode_to_delete = 219 END

  // update save vs. school bonus (349)
  LPF ~ALTER_SPELL_EFFECT~ INT_VAR
    check_headers = 1
    match_opcode = 346
    parameter1 = 6
  END

COPY_EXISTING ~SPPR318.spl~ ~override/SPPR318.spl~
  WRITE_SHORT  0x20      0 // Priest Type

// Spiritual Clarity
COPY_EXISTING ~SPPR350.spl~ ~override/SPPR350.spl~
  SAY UNIDENTIFIED_DESC @10268

  // update casting speed
  LPF ~ALTER_SPELL_HEADER~ INT_VAR speed = 3 END

  // add prot from envelop
  LPF ~CLONE_EFFECT~
    INT_VAR
      check_globals = 0
      match_opcode = 321
    STR_VAR
      match_resource = ~SPPR550~
      resource = ~S!misva2.spl~
  END

  // remove stuff vs. fear
  LPF DELETE_SPELL_EFFECT INT_VAR opcode_to_delete = 23 END
  LPF DELETE_SPELL_EFFECT INT_VAR opcode_to_delete = 161 END
  LPF DELETE_EFFECT INT_VAR match_opcode = 240 match_parameter2=36 END
  LPF DELETE_EFFECT INT_VAR match_opcode = 321 STR_VAR match_resource=~SPIN105~ END
  LPF DELETE_EFFECT INT_VAR match_opcode = 321 STR_VAR match_resource=~SPWI125~ END
  LPF DELETE_EFFECT INT_VAR match_opcode = 321 STR_VAR match_resource=~SPWI205~ END
  LPF DELETE_EFFECT INT_VAR match_opcode = 321 STR_VAR match_resource=~SPWI811~ END
  LPF DELETE_EFFECT INT_VAR match_opcode = 321 STR_VAR match_resource=~SPIN895~ END
  LPF DELETE_EFFECT INT_VAR match_opcode = 321 STR_VAR match_resource=~SPPR706~ END
  LPF DELETE_EFFECT INT_VAR match_opcode = 321 STR_VAR match_resource=~SPPR416~ END
  LPF DELETE_EFFECT INT_VAR match_opcode = 321 STR_VAR match_resource=~BDAURAFE~ END

// Spirit Fire
COPY_EXISTING ~SPPR450.spl~ ~override/SPPR450.spl~
  SAY UNIDENTIFIED_DESC @10323

  // update cast spell (146)
  LPF ~ALTER_SPELL_EFFECT~ INT_VAR
    check_headers = 1
    match_opcode = 146
    probability1 = 100
    savingthrow = 0
  END

COPY_EXISTING ~sppr506.spl~ ~override/sppr506.spl~
  SAY UNIDENTIFIED_DESC @10189
  WRITE_BYTE  0x27      7 // secondary type

  // patch casting time
  READ_SHORT 0x68 "icount"
  READ_LONG 0x64 "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
    WRITE_SHORT (%ioffset% + ("%it%" * 0x28) + 0x12) 1
    "it" = "%it%" + 1
  END

// Recall Spirit
COPY_EXISTING ~SPPR550.spl~ ~override/SPPR550.spl~
  SAY UNIDENTIFIED_DESC @10324

  // update casting speed
  LPF ~ALTER_SPELL_HEADER~ INT_VAR speed = 6 END

COPY_EXISTING ~SPPR705.spl~ ~override/SPPR705.spl~
  READ_BYTE 0x19 "splflags"
  WRITE_BYTE 0x19 ("%splflags%" BOR 0b00000100)

COPY_EXISTING ~SPPR709.spl~ ~override/SPPR709.spl~
  READ_BYTE 0x19 "splflags"
  WRITE_BYTE 0x19 ("%splflags%" BOR 0b00000100)

COPY_EXISTING ~sppr710.spl~ ~override/sppr710.spl~
  WRITE_BYTE  0x27    0xc // secondary type

COPY_EXISTING ~sppr715.spl~ ~override/sppr715.spl~
  WRITE_BYTE  0x27    0xc // secondary type

COPY_EXISTING ~sppr983.spl~ ~override/sppr983.spl~
  WRITE_BYTE  0x25      4 // primary type
  WRITE_BYTE  0x27     11 // secondary type

COPY_EXISTING ~sppr989.spl~ ~override/sppr989.spl~
  WRITE_BYTE  0x25      4 // primary type
  WRITE_BYTE  0x27     11 // secondary type

// wizard spells //

COPY_EXISTING ~SPWI205.spl~ ~override/SPWI205.spl~
  READ_BYTE 0x19 "splflags"
  WRITE_BYTE 0x19 ("%splflags%" BOR 0b00000100)

COPY_EXISTING ~SPWI213.spl~ ~override/SPWI213.spl~
  READ_BYTE 0x19 "splflags"
  WRITE_BYTE 0x19 ("%splflags%" BOR 0b00000100)

// remove penalty to saving-throws for display string effect, Ray of Enfeeblement
COPY_EXISTING ~SPWI221.spl~ ~override/spwi221.spl~
  LAUNCH_PATCH_FUNCTION ~ALTER_SPELL_EFFECT~ INT_VAR
    check_headers = 1
    header_type = 2
    match_opcode = 139
    savebonus = 0
  END

// remove bonus to saving-throws for play visual effect, Dire Charm
COPY_EXISTING ~SPWI316.spl~ ~override/SPWI316.spl~
  LAUNCH_PATCH_FUNCTION ~ALTER_SPELL_EFFECT~ INT_VAR
    check_headers = 1
    header_type = 1
    match_opcode = 215
    savebonus = 0
  END

COPY_EXISTING ~SPWI401.spl~ ~override/SPWI401.spl~
  READ_BYTE 0x19 "splflags"
  WRITE_BYTE 0x19 ("%splflags%" BOR 0b00000100)

COPY_EXISTING ~SPWI411.spl~ ~override/SPWI411.spl~
  READ_BYTE 0x19 "splflags"
  WRITE_BYTE 0x19 ("%splflags%" BOR 0b00000100)

  // patch "wake on sleep" for Emotion
  LPF ~ALTER_SPELL_EFFECT~ INT_VAR
    check_headers = 1
    match_opcode = 39
    parameter2 = 1
  END

// Update Breach to its own new secondary type
COPY_EXISTING ~spwi513.spl~  ~override/spwi513.spl~
              ~spwish38.spl~ ~override/spwish38.spl~
  WRITE_BYTE  0x27 ~%Breach%~ // secondary type

COPY_EXISTING ~spwi516.spl~ ~override/spwi516.spl~
  WRITE_BYTE  0x27      0 // secondary type

// Update Spell Shield to protect from Breach
COPY_EXISTING ~spwi519.spl~ ~override/spwi519.spl~
              ~spwii01.spl~ ~override/spwii01.spl~
  LPF ~CLONE_EFFECT~
    INT_VAR
      check_globals = 0
      match_opcode = 226
      parameter2 = ~%Breach%~
    STR_VAR
      insert = ~below~
  END

  LPF ~CLONE_EFFECT~
    INT_VAR
      check_globals = 0
      match_opcode = 226
      match_parameter2 = ~%Breach%~
      opcode = 328
      parameter1 = 0
      parameter2 = ~%spell_shield_state%~
      special = 1
    STR_VAR
      insert = ~below~
  END

COPY_EXISTING ~spwi520.spl~ ~override/spwi520.spl~
  WRITE_BYTE  0x27      0 // secondary type

COPY_EXISTING ~spwi521.spl~ ~override/spwi521.spl~
  WRITE_BYTE  0x27      0 // secondary type

// Update Spell Turning to protect from Breach
COPY_EXISTING ~spwi701.spl~ ~override/spwi701.spl~
              ~spwii03.spl~ ~override/spwii03.spl~
              ~spwii24.spl~ ~override/spwii24.spl~
  LPF ~CLONE_EFFECT~
    INT_VAR
      check_globals = 0
      match_opcode = 200
      match_parameter2 = 9
      opcode = 228
      parameter2 = ~%Breach%~
    STR_VAR
      insert = ~below~
  END

  LPF ~CLONE_EFFECT~
    INT_VAR
      check_globals = 0
      match_opcode = 228
      opcode = 328
      parameter1 = 0
      parameter2 = ~%spell_turning_state%~
      special = 1
    STR_VAR
      insert = ~below~
  END

// patch the display portrait icon value for PfME to point to the proper icon
// Spell Shield is hardcoded to display 73, PfME points there by default as well
// states.bam and states2.bam are provided with proper icons at both frames
COPY_EXISTING ~SPWI606.spl~ ~override/spwi606.spl~
  LAUNCH_PATCH_FUNCTION ~ALTER_SPELL_EFFECT~ INT_VAR
    check_headers = 1
    header_type = 1
    match_opcode = 142
    parameter2 = 123
  END
  BUT_ONLY

COPY_EXISTING ~SPWI612.spl~ ~override/SPWI612.spl~
  READ_BYTE 0x19 "splflags"
  WRITE_BYTE 0x19 ("%splflags%" BOR 0b00000100)

COPY_EXISTING ~spwi620.spl~ ~override/spwi620.spl~
  WRITE_BYTE  0x27      0 // secondary type

COPY_EXISTING ~spwi621.spl~ ~override/spwi621.spl~
  WRITE_BYTE  0x27      0 // secondary type

COPY_EXISTING ~spwi622.spl~ ~override/spwi622.spl~
  WRITE_BYTE  0x27      0 // secondary type

COPY_EXISTING ~SPWI715.spl~ ~override/SPWI715.spl~
  READ_BYTE 0x19 "splflags"
  WRITE_BYTE 0x19 ("%splflags%" BOR 0b00000100)

COPY_EXISTING ~SPWI805.spl~ ~override/SPWI805.spl~
  READ_BYTE 0x19 "splflags"
  WRITE_BYTE 0x19 ("%splflags%" BOR 0b00000100)

COPY_EXISTING ~SPWI910.spl~ ~override/SPWI910.spl~
  READ_BYTE 0x19 "splflags"
  WRITE_BYTE 0x19 ("%splflags%" BOR 0b00000100)

COPY_EXISTING ~SPWI911.spl~ ~override/SPWI911.spl~
  READ_BYTE 0x19 "splflags"
  WRITE_BYTE 0x19 ("%splflags%" BOR 0b00000100)

COPY_EXISTING ~SPWI912.spl~ ~override/SPWI912.spl~
  READ_BYTE 0x19 "splflags"
  WRITE_BYTE 0x19 ("%splflags%" BOR 0b00000100)

// wish spells //

// patch projectile type for Wish:Rest option from Invisible Travelling (79) to None (1)
COPY_EXISTING ~SPWISH16.spl~ ~override/SPWISH16.spl~
  LAUNCH_PATCH_FUNCTION ~ALTER_SPELL_HEADER~ INT_VAR
    header = 1
    projectile = 1
  END
  BUT_ONLY

COPY_EXISTING ~SPWISH35.spl~ ~override/SPWISH35.spl~
  READ_BYTE 0x19 "splflags"
  WRITE_BYTE 0x19 ("%splflags%" BOR 0b00000100)

// various named spells //

COPY_EXISTING ~BEGUILE.spl~ ~override/BEGUILE.spl~
  WRITE_BYTE  0x25    4   // primary type
  WRITE_BYTE  0x27    0xb // secondary type

COPY_EXISTING ~melstone.spl~ ~override/melstone.spl~
  WRITE_BYTE  0x27      7 // secondary type

COPY_EXISTING ~METSWARM.pro~ ~override/METSWARM.pro~
  WRITE_BYTE 0x216 4

COPY_EXISTING ~SPWII11.spl~ ~override/SPWII11.spl~
  WRITE_BYTE  0x25      4 // primary type

// projectiles //

// fix Comet's projectile to affect only enemies
COPY_EXISTING ~comet.pro~ ~override/comet.pro~
  READ_LONG 0x00200 "areaflags"
  WRITE_LONG 0x00200 ("%areaflags%" | BIT6)
  BUT_ONLY

// fix Writhing Fog's projectile to affect only allies, caster included
COPY_EXISTING ~writhing.pro~ ~override/writhing.pro~
  READ_LONG  0x0c behavior
  WRITE_LONG 0x0c ("%behavior%" ^^ BIT4)

  READ_LONG 0x00200 "areaflags"
  WRITE_LONG 0x00200 ("%areaflags%" | BIT6 | BIT7)

  WRITE_BYTE 0x00216 4 // trigger count

  BUT_ONLY
